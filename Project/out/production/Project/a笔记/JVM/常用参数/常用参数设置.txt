·-XX：MaxMetaspaceSize：
设置元空间最大值，默认是-1，即不限制，或者说只受限于本地内存大小。

XX：MetaspaceSize：
指定元空间的初始空间大小，以字节为单位，达到该值就会触发垃圾收集进行类型卸载，
同时收集器会对该值进行调整：如果释放了大量的空间，就适当降低该值；
如果释放了很少的空间，那么在不超过-XX：MaxMetaspaceSize（如果设置了的话）的情况下，适当提高该值。

-XX：MinMetaspaceFreeRatio：
作用是在垃圾收集之后控制最小的元空间剩余容量的百分比，可减少因为元空间不足导致的垃圾收集的频率。
类似的还有-XX：MaxMetaspaceFreeRatio，用于控制最大的元空间剩余容量的百分比。

-XX：MaxDirectMemorySize参数来指定直接内存（Direct Memory）的容量大小，
如果不去指定，则默认与Java堆最大值（由-Xmx指定）一致

-Xnoclassgc参数进行控制无用类回收
还可以使用-verbose：class以及-XX：+TraceClass-Loading、
-XX：+TraceClassUnLoading查看类加载和卸载信息，
其中-verbose：class和-XX：+TraceClassLoading可以在Product版的虚拟机中使用，
-XX：+TraceClassUnLoading参数需要FastDebug版的虚拟机支持。

-XX：+UseCondCardMark，用来决定是否开启卡表更新的条件判断,
用来解决cpu缓存系统中的缓存行造成的伪共享

-XX：+UseAdaptiveSizePolicy
用来打开Parallel Scavenge收集器的自动调节

-XX：+PrintGCDetails这个收集器日志参数，告诉虚拟机在发生垃圾收集行为时打印内存回收日志，
并且在进程退出的时候输出当前的内存各区域分配情况。

-Xmn10m 分配给新生代10m内存

-XX：Survivor-Ratio=8决定了新生代中Eden区与一个Survivor区的空间比例是8∶1

PermGen space的全称是Permanent Generation space,是指内存的永久保存区域

-XX：PrintTenureSizeThreshold被设置为3MB（就是3145728，这个参数不能与-Xmx之类的参数一样直接写3MB），
因此超过3MB的对象都会直接在老年代进行分配。

-XX:+PrintTenuringDistribution
打印Survivor对象年龄分布

-XX：MaxTenuringThreshold设置对象晋升老年代的年龄阈值









